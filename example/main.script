
local wm 		= require("libs.ecs.world-manager")

------------------------------------------------------------------------------------------------------------

local function defaultUpdate(self, e, dt)
	-- print("Updating: "..e.name.."  "..dt)
end

------------------------------------------------------------------------------------------------------------

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post("camera", "acquire_camera_focus")

	-- rotate the cube
	go.animate(".", "euler.z", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_INOUTQUAD, 6)
	go.animate(".", "euler.x", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_INOUTQUAD, 9)
	go.animate(".", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_INOUTQUAD, 12)

	-- tint the cube and the sphere
	go.set("#cube", "tint", vmath.vector4(1,1,0,1))
	go.set("#sphere", "tint", vmath.vector4(1,0,0,1))
	
	-- position directional light
	self.light = vmath.vector4(0, 0, go.get_position().z + 1, 0)
	go.set("#cube", "light", self.light)
	go.set("#quad", "light", self.light)
	go.set("#sphere", "light", self.light)

	-- Add cameras as entities 
	self.cube = wm:addGameObject( "cube", "/main#cube" )
	self.quad = wm:addGameObject( "quad", "/main#quad" )
	self.sphere = wm:addGameObject( "sphere", "/main#sphere" )

	self.defaultSystem = wm:addSystem( "Default", { "name", "etype" }, defaultUpdate)	
end

------------------------------------------------------------------------------------------------------------

function final(self)
	
end

------------------------------------------------------------------------------------------------------------

function update(self, dt)
	
end

------------------------------------------------------------------------------------------------------------

function on_input(self, action_id, action)
	-- move directional light based on input
	self.light.x = 2 * ((action.x - 480) / 480)
	self.light.y = 2 * ((action.y - 320) / 320)
	go.set("#cube", "light", self.light)
	go.set("#quad", "light", self.light)
	go.set("#sphere", "light", self.light)
end

------------------------------------------------------------------------------------------------------------